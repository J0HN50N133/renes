// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_array = require("rescript/lib/js/caml_array.js");

function interpret(cpu, program) {
  cpu.register_a = 0;
  cpu.status = 0;
  cpu.pc = 0;
  var $$break = false;
  while(!$$break) {
    var op = Caml_array.get(program, cpu.pc);
    cpu.pc = cpu.pc + 1 | 0;
    if (op !== 0) {
      if (op !== 169) {
        throw {
              RE_EXN_ID: "Match_failure",
              _1: [
                "Cpu.res",
                15,
                4
              ],
              Error: new Error()
            };
      }
      var param = Caml_array.get(program, cpu.pc);
      cpu.pc = cpu.pc + 1 | 0;
      cpu.register_a = param;
      cpu.status = cpu.register_a === 0 ? cpu.status | 2 : cpu.status & 253;
      cpu.status = (cpu.register_a & 128) !== 0 ? cpu.status | 128 : cpu.status & 127;
    } else {
      $$break = true;
    }
  };
  
}

exports.interpret = interpret;
/* No side effect */
